name: CI
on:
  push: {}
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    runs-on: ubuntu-18.04
    services:
      db:
        env:
          POSTGRES_USER: nexmo_developer
          POSTGRES_DB: nexmo_developer_production
          POSTGRES_HOST_AUTH_METHOD: trust
        image: postgres:11
        ports: ['5432:5432']
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - name: Find yarn cache location
      id: yarn-cache
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - name: JS package cache
      uses: actions/cache@v1
      with:
        path: ${{ steps.yarn-cache.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: Install packages
      run: |
        yarn install --pure-lockfile
    - name: Set up Ruby 3.0.0
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.0.0
    - name: Ruby gem cache
      uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gems-
    - name: Install postgres headers
      run: sudo apt-get -yqq install libpq-dev
    - name: Bundle Install
      env:
        POSTGRES_USERNAME: postgres
        BUNDLE_RUBYGEMS__PKG__GITHUB__COM: "NexmoDev:${{ secrets.GH_ADMIN_TOKEN }}"
      run: |
        gem update --system 3.1.4 -N
        gem install --no-document bundler
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3
    - name: Check prose issues
      env:
        POSTGRES_USERNAME: postgres
        DOCS_BASE_PATH: "."
        OAS_PATH: "_open_api/api_specs/definitions"
        FORCE_COLOR: true
      run: |
        ./node_modules/.bin/alex _documentation/en _partials _modals _tutorials/en _use_cases/en
    - name: Run rake tasks
      env:
        POSTGRES_USERNAME: postgres
        OAS_PATH: "_open_api/api_specs/definitions"
        DISABLE_SSL: true
        FORCE_COLOR: true
      run: |
        DISABLE_DATABASE_ENVIRONMENT_CHECK=1 RAILS_ENV=production bundle exec nexmo-developer --docs=. --rake-ci
    - name: Run tests
      env:
        POSTGRES_USERNAME: postgres
        OAS_PATH: "_open_api/api_specs/definitions"
        DISABLE_SSL: true
        RAILS_ENV: "production"
        DATABASE_CLEANER_ALLOW_PRODUCTION: 1
      run: DOCS_BASE_PATH=`pwd` bundle exec rspec
